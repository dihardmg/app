services:
  app:
    build: .
    ports:
      - "8081:8081"
    environment:
      # - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/app_db
      # - SPRING_DATASOURCE_USERNAME=user
      # - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${PGPASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRINGDOC_API_DOCS_PATH=/api-docs
      - SPRINGDOC_SWAGGER_UI_PATH=/swagger-ui.html
      - SPRINGDOC_SWAGGER_UI_OPERATIONS_SORTER=method
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  postgres:
    image: 'postgres:16-alpine'
    environment:
      - 'POSTGRES_DB=app_db'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_USER=user'
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge