# Railway-specific application configuration
# This profile is used when deploying to Railway

# Database Configuration for Railway
# Railway provides DATABASE_URL in format: postgresql://user:password@host:port/database
# For Spring Boot, we need to use Railway's environment variables
spring.datasource.url=${DATABASE_URL}
spring.datasource.driver-class-name=org.postgresql.Driver

# Railway's PostgreSQL plugin provides these specific environment variables:
# DATABASE_URL (full URL)
# DATABASE_USER (username)
# DATABASE_PASSWORD (password)
# DATABASE_HOST (hostname)
# DATABASE_PORT (port)
# DATABASE_NAME (database name)

# Use Railway's specific environment variables
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

# Connection pool configuration for Railway
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2

# Flyway Configuration for Railway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.clean-disabled=false

# JPA Configuration for production
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.ddl-auto=validate

# JWT Configuration (use environment variables in production)
jwt.secret=${JWT_SECRET:mySecretKey123456789012345678901234567890123456789012345678901234567890}
jwt.expiration=43200000

# Server Configuration
server.port=${PORT:8080}
server.tomcat.connection-timeout=300000
server.tomcat.max-http-form-post-size=10MB

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.file-size-threshold=2MB
spring.servlet.multipart.resolve-lazily=true

# Application Upload Directory
app.upload.dir=${UPLOAD_DIR:uploads}

# Base URL Configuration for Railway
app.base.url=${RAILWAY_PUBLIC_URL:https://your-app.railway.app}

# Swagger/OpenAPI Configuration (disable in production if needed)
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_ENABLED:true}